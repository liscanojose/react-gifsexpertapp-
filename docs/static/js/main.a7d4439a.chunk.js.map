{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAiBhD,OACE,0BAAMC,SAba,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAQ,IAK7BR,GAAc,SAAAS,GAAM,OAAIP,GAAJ,mBAAkBO,OACtCN,EAAc,OAMd,2BACAO,KAAK,OACLC,MAAST,EACTU,SApBsB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCLdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEXC,EAFW,iDAEsCC,UAAUH,GAFhD,+DAGEI,MAAOF,GAHT,cAGXG,EAHW,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATrB,kBAYVM,GAZU,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,yBAAKc,UAAU,0CACb,yBAAMC,IAAMf,EAAKgB,IAAKN,IACtB,2BAAIA,KCAGO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECFd,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAkB1C,OAZAC,qBAAU,WAERxB,EAAQC,GACPwB,MAAK,SAAAhB,GACJc,EAAS,CACPf,KAAMC,EACNY,SAAS,SAIZ,CAAGpB,IAECqB,EDdwBI,CAAazB,GAArCoB,EAFiC,EAEjCA,QAAcP,EAFmB,EAExBN,KAIhB,OACE,oCACE,wBAAIS,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,YAEZ,yBAAKA,UAAU,aAEXH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACAgB,IAAOhB,EAAIC,IACPD,UEYDiB,EA/BO,WACrB,IAAD,EACsCzC,mBAAS,CAAC,cADhD,mBACS0C,EADT,KACqB3C,EADrB,KAWE,OACE,oCACA,6CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC7B,6BACA,4BAEK2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACEA,SAAYA,EACZ0B,IAAO1B,U,MCrBrB6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a7d4439a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nexport const AddCategory = ( {setCategories} ) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    if ( inputValue.trim().length >2 )\n    {\n      //existentes y leugo la ultima\n      //setCategories(categs =>[...categs, inputValue]);\n      //ultima y luego las existentes\n      setCategories(categs =>[inputValue,...categs,]);\n      setInputValue('');\n    }\n\n  }\n  return (\n    <form onSubmit = { handleSubmit }>\n      <input\n      type=\"text\"\n      value = {inputValue}\n      onChange= {handleInputChange}\n      />\n    </form>\n  )\n\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async ( category ) =>\n    {\n      const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=hAMazwcIGmoWLpmyHyKGjEDVymzeWy18`\n      const resp = await fetch( url );\n      const {data} = await resp.json();\n      const gifs = data.map( img => {\n        return{\n          id: img.id,\n          title: img.title,\n          url: img.images?.downsized_medium.url,\n        }\n      })\n      return gifs;\n    }\n","import React from 'react'\n\nexport const GifGridItem = ( {title, url} ) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img  src= {url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ( { category }) => {\n\n  const {loading, data:images} = useFetchGifs(category);\n\n\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n\n      <div className=\"card-grid\">\n        {\n          images.map( img =>(\n            <GifGridItem\n            key = {img.id}\n            {...img}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\n// state es el objeto puede cambair el nombre de state a cualquiera objeto gifs lo q sea\nexport const useFetchGifs = ( category ) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n\n    getGifs(category)\n    .then(gifs => {\n      setstate({\n        data: gifs,\n        loading: false\n      });\n    })\n\n  }, [  category  ])\n\n  return state; //{data:[],loading:true}\n}\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nconst GiftExpertApp = () =>\n{\n  const [categories, setCategories] = useState(['One Punch']);\n\n  // const handleAddCategory = () =>\n  // {\n  //   //caso1 q funciona\n  //   //setCategories([...categories, 'Inuyasha']);\n  //   //caso 2 q tambien funciona\n  //   //            valor inicia => valor inicial + lo nuevo\n  //   setCategories(categs =>[...categs, 'Inuyasha']);\n  // }\n  return (\n    <>\n    <h2>GiftExpertApp</h2>\n    <AddCategory setCategories = {setCategories} />\n     <hr/>\n     <ol>\n        {\n          categories.map( category =>(\n            <GifGrid\n              category = {category}\n              key = {category}\n            />\n          ))\n        }\n     </ol>\n    </>\n  );\n}\n\nexport default GiftExpertApp;\n","import React from'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp';\nimport './index.css';\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}